# ************************************************
# ********** Project Metadata **********
# ************************************************
[project]
name = "family_budget_bot"
version = "0.1.0"
readme = { file = "README.md", content-type = "text/markdown" }
authors = [ { name = "Dmytro Parfeniuk" } ]
requires-python = ">=3.12.0,<4.0"
dependencies = [
    "SQLAlchemy[asyncio,mypy]~=2.0.21",  # async ORM (includes mypy extension)
    "aiomcache~=0.8.2",  # async memcached client
    "alembic~=1.13",  # migrations tool
    "arq~=0.25",  # async job queues in python on redis
    "asyncpg~=0.30.0",  # async PostgreSQL driver
    "fastapi~=0.112",  # web framework
    "gunicorn~=21.2",  # application web server (better workers experience)
    "httpx~=0.27.2",  # http client
    "loguru~=0.7.2",  # better logging experience
    "pydantic-settings~=2.0.0",  # better settings experience
    "pydantic~=2.0.0",  # data validation
    "sentry-sdk[fastapi]~=2.29.1",  #  issues monitoring, profiling
    "uvicorn[standard]~=0.23.2",  # async application web server
]

[project.optional-dependencies]
dev = [
    "asyncpg-stubs~=0.30.1",  # additional stubs
    "black~=24.8.0",  # formatting
    "flake8~=7.1.1",  # linter
    "isort~=5.13.2",  # another formatting (imports sort)
    "mypy~=1.10.1",  # type checking
    "polyfactory~=2.9",  # fake data
    "pytest-asyncio~=0.24",  # async testing better experience
    "pytest-mock~=3.14.0",  # better mocking experience
    "pytest-xdist[psutil]~=3.6.1",  # run tests in separate processes
    "pytest~=8.2.2",  # testing framework
    "respx~=0.22.0",  # mock httpx requests and http core libraries
]


# ************************************************
# ********** Code Quality Tools **********
# ************************************************

[tool.black]
target-version = ['py312']
line-length = 79
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | venv
  )/
)
'''


[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
skip = 'venv'
src_paths = ["src", "tests"]


[tool.mypy]
plugins = [
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin"
]
files = ["src", "tests"]
python_version = '3.12'
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true
exclude = ["venv", "migrations"]

# Silence "type import errors" as our 3rd-party libs does not have types
# Check: https://mypy.readthedocs.io/en/latest/config_file.html#import-discovery
follow_imports = 'silent'

# [[tool.mypy.overrides]]
# ignore_missing_imports=true


[tool.pytest.ini_options]
addopts = '-s -vvv -x'
cache_dir = '/tmp'
asyncio_mode = 'auto'
python_files = 'test_*.py'
python_functions = 'test_*'
filterwarnings = [
    'ignore::RuntimeWarning',
    'ignore::UserWarning',
    "ignore::DeprecationWarning",
]
markers = [
    "use_db: recreate database tables for this test from the scratch"
]
# to avoid `PytestDeprecationWarning` of `pytest_asyncio` plugin
asyncio_default_fixture_loop_scope = "function"


# ************************************************
# ********** Dependencies management **********
# ************************************************

[tool.pip-tools]
generate_hashes = true
