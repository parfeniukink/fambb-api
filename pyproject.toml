# ************************************************
# ********** Project Metadata **********
# ************************************************
[project]
name = "family_budget_bot"
version = "0.1.0"
readme = { file = "README.md", content-type = "text/markdown" }
authors = [ { name = "Dmytro Parfeniuk" } ]
requires-python = ">=3.11.0,<4.0"
dependencies = [
    "SQLAlchemy[asyncio,mypy]>=2.0.21",  # async ORM (includes mypy extension)
    "aioredis>=2.0",  # async Redis client
    "aiosqlite>=0.19",  # async SQLite client
    "alembic>=1.12",  # migrations tool
    "fastapi>=0.112",  # web framework
    "gunicorn>=21.2",  # application web server (better workers experience)
    "loguru>=0.7.2",  # better logging experience
    "pydantic-settings>=2.0.0",  # better settings experience
    "pydantic>=2.0.0",  # data validation
    "uvicorn[standard]>=0.23.2",  # async application web server

]

[project.optional-dependencies]
dev = [
    "black>=24.8.0",  # formatting
    "isort>=5.13.2",  # another formatting (imports sort)
    "flake8>=7.1.1",  # linter
    "mypy>=1.10.1",  # type checking
    "pytest-mock>=3.14.0",  # better mocking experience
    "pytest>=8.2.2",  # testing framework
    "pytest-asyncio>=0.21",  # async testing better experience
    "polyfactory>=2.9",  # fake data models
]


# ************************************************
# ********** Code Quality Tools **********
# ************************************************

[tool.black]
target-version = ['py311']
line-length = 79
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | venv
  )/
)
'''


[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
skip = 'venv'
src_paths = ["src"]


[tool.mypy]
plugins = [
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin"
]
files = ["src", "tests"]
python_version = '3.11'
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true
exclude = ["venv"]

# Silence "type import errors" as our 3rd-party libs does not have types
# Check: https://mypy.readthedocs.io/en/latest/config_file.html#import-discovery
follow_imports = 'silent'

[[tool.mypy.overrides]]
# ignore_missing_imports=true


[tool.pytest.ini_options]
addopts = '-s -vvv'
markers = [
    "smoke: quick tests to check basic functionality",
    "sanity: detailed tests to ensure major functions work correctly",
    "regression: tests to ensure that new changes do not break existing functionality"
]


# ************************************************
# ********** Dependencies management **********
# ************************************************

[tool.pip-tools]
generate_hashes = true
