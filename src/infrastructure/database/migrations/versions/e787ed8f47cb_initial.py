"""initial

Revision ID: e787ed8f47cb
Revises: 
Create Date: 2024-10-28 14:29:28.964751

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "e787ed8f47cb"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    cost_categories_table = op.create_table(
        "cost_categories",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cost_categories")),
        sa.UniqueConstraint("name", name=op.f("uq_cost_categories_name")),
    )
    op.create_table(
        "currencies",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("sign", sa.String(length=1), nullable=False),
        sa.Column("equity", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_currencies")),
        sa.UniqueConstraint("name", name=op.f("uq_currencies_name")),
        sa.UniqueConstraint("sign", name=op.f("uq_currencies_sign")),
    )
    op.create_table(
        "users",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("token", sa.String(length=255), nullable=False),
        sa.Column("default_currency_id", sa.Integer(), nullable=True),
        sa.Column("default_cost_category_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["default_cost_category_id"],
            ["cost_categories.id"],
            name=op.f("fk_users_default_cost_category_id_cost_categories"),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["default_currency_id"],
            ["currencies.id"],
            name=op.f("fk_users_default_currency_id_currencies"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("name", name=op.f("uq_users_name")),
    )
    op.create_table(
        "cost_shortcuts",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("value", sa.Integer(), nullable=True),
        sa.Column(
            "timestamp",
            sa.DATE(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("currency_id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["cost_categories.id"],
            name=op.f("fk_cost_shortcuts_category_id_cost_categories"),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["currency_id"],
            ["currencies.id"],
            name=op.f("fk_cost_shortcuts_currency_id_currencies"),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_cost_shortcuts_user_id_users"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cost_shortcuts")),
    )
    op.create_table(
        "costs",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.Column(
            "timestamp",
            sa.DATE(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("currency_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["cost_categories.id"],
            name=op.f("fk_costs_category_id_cost_categories"),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["currency_id"],
            ["currencies.id"],
            name=op.f("fk_costs_currency_id_currencies"),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_costs_user_id_users"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_costs")),
    )
    op.create_table(
        "exchanges",
        sa.Column("from_value", sa.Integer(), nullable=False),
        sa.Column("to_value", sa.Integer(), nullable=False),
        sa.Column(
            "timestamp",
            sa.DATE(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("from_currency_id", sa.Integer(), nullable=False),
        sa.Column("to_currency_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["from_currency_id"],
            ["currencies.id"],
            name=op.f("fk_exchanges_from_currency_id_currencies"),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["to_currency_id"],
            ["currencies.id"],
            name=op.f("fk_exchanges_to_currency_id_currencies"),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_exchanges_user_id_users"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exchanges")),
    )
    op.create_table(
        "incomes",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.Column(
            "timestamp",
            sa.DATE(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.Column("source", sa.String(length=255), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("currency_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["currency_id"],
            ["currencies.id"],
            name=op.f("fk_incomes_currency_id_currencies"),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_incomes_user_id_users"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_incomes")),
    )
    op.create_index(
        op.f("ix_incomes_source"), "incomes", ["source"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_incomes_source"), table_name="incomes")
    op.drop_table("incomes")
    op.drop_table("exchanges")
    op.drop_table("costs")
    op.drop_table("cost_shortcuts")
    op.drop_table("users")
    op.drop_table("currencies")
    op.drop_table("cost_categories")
    # ### end Alembic commands ###
