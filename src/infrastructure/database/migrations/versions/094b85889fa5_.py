"""empty message

Revision ID: 094b85889fa5
Revises: b6f2c5d8783b
Create Date: 2025-06-24 11:17:12.756005

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "094b85889fa5"
down_revision: Union[str, None] = "b6f2c5d8783b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bank_metadata",
        sa.Column(
            "bank",
            sa.Enum(
                "monobank", "privatbank", "oshchadbank", native_enum=False
            ),
            nullable=False,
        ),
        sa.Column("api_key", sa.String(length=255), nullable=True),
        sa.Column(
            "processed_transactions",
            postgresql.ARRAY(sa.String(), dimensions=1),
            nullable=True,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_bank_metadata_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_bank_metadata")),
        sa.UniqueConstraint(
            "user_id", "bank", name=op.f("uq_bank_metadata_user_id")
        ),
    )
    op.drop_constraint(
        "fk_cost_shortcuts_user_id_users", "cost_shortcuts", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_cost_shortcuts_user_id_users"),
        "cost_shortcuts",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("users", "monobank_api_key")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "monobank_api_key",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_constraint(
        op.f("fk_cost_shortcuts_user_id_users"),
        "cost_shortcuts",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_cost_shortcuts_user_id_users",
        "cost_shortcuts",
        "users",
        ["user_id"],
        ["id"],
        ondelete="RESTRICT",
    )
    op.drop_table("bank_metadata")
    # ### end Alembic commands ###
